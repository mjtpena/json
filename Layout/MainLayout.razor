@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime
@implements IDisposable
@using JsonBlazer.Services
@using Microsoft.JSInterop

<div class="@(ThemeService.GetThemeClass())">
<MudLayout>
    <MudAppBar Elevation="0" Class="mud-appbar glass-effect">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <img src="logo.svg" alt="JSON Tool Logo" class="logo animate-bounce" />
        <MudText Typo="Typo.h5" Class="text-gradient" Style="font-weight: 700; color: white;">
            Ultimate JSON Tool
        </MudText>
        <MudSpacer />
        <MudStack Row Spacing="1">
            <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" 
                          Color="Color.Inherit" 
                          OnClick="@ToggleThemeAsync"
                          Class="theme-toggle"
                          Title="@(_isDarkMode ? "Switch to light mode" : "Switch to dark mode")" />
            <MudIconButton Icon="@Icons.Material.Filled.Code" 
                          Color="Color.Inherit" 
                          Href="https://github.com/mjtpena/json" 
                          Target="_blank"
                          Title="View on GitHub" />
        </MudStack>
    </MudAppBar>
    
    <MudDrawer @bind-Open="@_drawerOpen" 
               Elevation="0" 
               Variant="@DrawerVariant.Mini" 
               OpenMiniOnHover="true"
               Style="background: linear-gradient(180deg, #f8fafc 0%, #e2e8f0 100%); border-right: 1px solid #cbd5e1;">
        <MudDrawerHeader Style="background: linear-gradient(135deg, #f1f5f9 0%, white 100%); border-bottom: 1px solid #e2e8f0;">
            <div style="display: flex; align-items: center; gap: 8px;">
                <img src="logo.svg" alt="JSON" style="height: 24px; width: auto;" />
                <MudText Typo="Typo.h6" Style="font-weight: 600; color: #1e293b;">JSON Tools</MudText>
            </div>
        </MudDrawerHeader>
        <div class="pa-2">
            <NavMenu />
        </div>
    </MudDrawer>
    
    <MudMainContent Style="background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%); min-height: 100vh;">
        <MudContainer MaxWidth="MaxWidth.False" Class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    
    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync();
        _isDarkMode = ThemeService.IsDarkMode;
        ThemeService.ThemeChanged += OnThemeChanged;
    }
    
    private void ToggleDrawer()
    {
        _drawerOpen = !_drawerOpen;
    }
    
    private async Task ToggleThemeAsync()
    {
        await ThemeService.ToggleThemeAsync();
    }
    
    private void OnThemeChanged(bool isDark)
    {
        _isDarkMode = isDark;
        InvokeAsync(StateHasChanged);
    }
    
    public void Dispose()
    {
        ThemeService.ThemeChanged -= OnThemeChanged;
    }
}
